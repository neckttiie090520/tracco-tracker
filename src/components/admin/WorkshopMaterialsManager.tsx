import React, { useState, useEffect } from 'react';
import { MaterialService } from '../../services/materials';
import { WorkshopMaterialDisplay } from '../materials/WorkshopMaterialDisplay';
import type { WorkshopMaterial, CreateMaterialRequest } from '../../types/materials';

interface WorkshopMaterialsManagerProps {
  workshopId: string;
  workshopTitle: string;
}

export function WorkshopMaterialsManager({ workshopId, workshopTitle }: WorkshopMaterialsManagerProps) {
  const [materials, setMaterials] = useState<WorkshopMaterial[]>([]);
  const [loading, setLoading] = useState(true);
  const [showAddForm, setShowAddForm] = useState(false);
  const [newMaterialUrl, setNewMaterialUrl] = useState('');
  const [newMaterialTitle, setNewMaterialTitle] = useState('');
  const [newMaterialDisplayMode, setNewMaterialDisplayMode] = useState<'title' | 'link' | 'embed'>('embed');
  const [isSubmitting, setIsSubmitting] = useState(false);

  useEffect(() => {
    fetchMaterials();
  }, [workshopId]);

  const fetchMaterials = async () => {
    try {
      setLoading(true);
      const data = await MaterialService.getWorkshopMaterials(workshopId);
      setMaterials(data);
    } catch (error) {
      console.error('Error fetching materials:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleAddMaterial = async (e: React.FormEvent) => {
    e.preventDefault();
    if (!newMaterialUrl.trim()) return;

    try {
      setIsSubmitting(true);
      const request: CreateMaterialRequest = {
        workshop_id: workshopId,
        url: newMaterialUrl.trim(),
        title: newMaterialTitle.trim() || undefined,
        display_mode: newMaterialDisplayMode,
      };

      await MaterialService.createMaterial(request);
      await fetchMaterials();
      
      // Reset form
      setNewMaterialUrl('');
      setNewMaterialTitle('');
      setNewMaterialDisplayMode('embed');
      setShowAddForm(false);
    } catch (error) {
      console.error('Error adding material:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleDeleteMaterial = async (materialId: string) => {
    if (!confirm('‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ô‡∏µ‡πâ?')) return;

    try {
      await MaterialService.deleteMaterial(materialId);
      await fetchMaterials();
    } catch (error) {
      console.error('Error deleting material:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
  };

  const handleReorder = async (materialIds: string[]) => {
    try {
      await MaterialService.reorderMaterials(workshopId, materialIds);
      await fetchMaterials();
    } catch (error) {
      console.error('Error reordering materials:', error);
      alert('‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á');
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center py-8">
        <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600"></div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <h3 className="text-lg font-semibold text-gray-900">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ Workshop</h3>
          <p className="text-sm text-gray-600">{workshopTitle}</p>
        </div>
        <button
          onClick={() => setShowAddForm(!showAddForm)}
          className="bg-indigo-600 hover:bg-indigo-700 text-white px-4 py-2 rounded-lg font-medium transition-colors flex items-center gap-2"
        >
          <span>‚ûï</span>
          ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
        </button>
      </div>

      {/* Add Material Form */}
      {showAddForm && (
        <div className="bg-gray-50 rounded-xl p-6 border border-gray-200">
          <h4 className="text-md font-semibold text-gray-900 mb-4">‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà</h4>
          <form onSubmit={handleAddMaterial} className="space-y-4">
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                URL ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ *
              </label>
              <input
                type="url"
                value={newMaterialUrl}
                onChange={(e) => setNewMaterialUrl(e.target.value)}
                placeholder="https://docs.google.com/... ‡∏´‡∏£‡∏∑‡∏≠ https://canva.com/..."
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
                required
              />
              <p className="text-xs text-gray-500 mt-1">
                ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö: Google Docs, Google Slides, Canva, YouTube, ‡πÅ‡∏•‡∏∞ URL ‡∏≠‡∏∑‡πà‡∏ô‡πÜ
              </p>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ (‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏)
              </label>
              <input
                type="text"
                value={newMaterialTitle}
                onChange={(e) => setNewMaterialTitle(e.target.value)}
                placeholder="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£..."
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
              </label>
              <select
                value={newMaterialDisplayMode}
                onChange={(e) => setNewMaterialDisplayMode(e.target.value as any)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
              >
                <option value="embed">‡∏ù‡∏±‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á) - ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥</option>
                <option value="link">‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏° (‡πÅ‡∏™‡∏î‡∏á URL)</option>
                <option value="title">‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô</option>
              </select>
            </div>

            <div className="flex gap-3">
              <button
                type="submit"
                disabled={isSubmitting}
                className="bg-indigo-600 hover:bg-indigo-700 disabled:opacity-50 text-white px-4 py-2 rounded-lg font-medium transition-colors"
              >
                {isSubmitting ? '‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°...' : '‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£'}
              </button>
              <button
                type="button"
                onClick={() => setShowAddForm(false)}
                className="bg-gray-300 hover:bg-gray-400 text-gray-700 px-4 py-2 rounded-lg font-medium transition-colors"
              >
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
              </button>
            </div>
          </form>
        </div>
      )}

      {/* Materials List */}
      <div className="space-y-4">
        {materials.length === 0 ? (
          <div className="text-center py-12 bg-gray-50 rounded-xl">
            <div className="text-4xl mb-4">üìÅ</div>
            <h3 className="text-lg font-medium text-gray-900 mb-2">‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£</h3>
            <p className="text-gray-600">‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏£‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Workshop ‡∏ô‡∏µ‡πâ</p>
          </div>
        ) : (
          <div className="space-y-4">
            <div className="flex items-center justify-between">
              <h4 className="text-md font-semibold text-gray-900">
                ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ({materials.length})
              </h4>
              <p className="text-sm text-gray-500">
                ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏£‡∏Å‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Workshop
              </p>
            </div>
            
            {materials.map((material, index) => (
              <div key={material.id} className="bg-white border border-gray-200 rounded-xl p-4">
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center gap-3">
                    <div className="flex flex-col items-center gap-1">
                      <span className="text-xs text-gray-500">#{index + 1}</span>
                      {index === 0 && (
                        <span className="text-xs bg-indigo-100 text-indigo-700 px-2 py-1 rounded-full font-medium">
                          ‡∏´‡∏•‡∏±‡∏Å
                        </span>
                      )}
                    </div>
                    <div>
                      <h5 className="font-medium text-gray-900">{material.title}</h5>
                      <p className="text-sm text-gray-500">
                        ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏ö‡∏ö: {
                          material.display_mode === 'embed' ? '‡∏ù‡∏±‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£' :
                          material.display_mode === 'link' ? '‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ï‡πá‡∏°' : '‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô'
                        }
                      </p>
                    </div>
                  </div>
                  
                  <div className="flex items-center gap-2">
                    <button
                      onClick={() => handleDeleteMaterial(material.id)}
                      className="text-red-600 hover:text-red-800 p-2 rounded-lg hover:bg-red-50 transition-colors"
                      title="‡∏•‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"
                    >
                      üóëÔ∏è
                    </button>
                  </div>
                </div>
                
                {/* Material Preview */}
                <div className="border border-gray-100 rounded-lg overflow-hidden">
                  <WorkshopMaterialDisplay material={material} />
                </div>
              </div>
            ))}
          </div>
        )}
      </div>

      {/* Tips */}
      <div className="bg-blue-50 border border-blue-200 rounded-xl p-4">
        <h4 className="text-sm font-semibold text-blue-900 mb-2">üí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö</h4>
        <ul className="text-sm text-blue-800 space-y-1">
          <li>‚Ä¢ ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏£‡∏Å‡∏à‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏´‡∏•‡∏±‡∏Å‡πÉ‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Workshop (‡∏Ñ‡∏•‡πâ‡∏≤‡∏¢ YouTube)</li>
          <li>‚Ä¢ ‡πÉ‡∏ä‡πâ "‡∏ù‡∏±‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Canva, Google Slides ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á</li>
          <li>‚Ä¢ ‡πÉ‡∏ä‡πâ "‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÄ‡∏ï‡πá‡∏°" ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ù‡∏±‡∏á‡πÑ‡∏î‡πâ</li>
          <li>‚Ä¢ ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏•‡∏≤‡∏Å‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï</li>
        </ul>
      </div>
    </div>
  );
}